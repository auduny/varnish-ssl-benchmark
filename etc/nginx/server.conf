#
# If executed in Docker on Mac, - the ip to be used as replacement of localhost, - it the
# ip of the dns - docker.for.mac.localhost
#
# else use: 127.0.0.1
#


server {
        listen   444 http2 ssl;
        resolver 127.0.0.11;
        server_name  default_server;
        error_log  /var/log/nginx/error.log;
        access_log  /var/log/nginx/access.log;
        location / {
            set $varnish 'http://varnish:80';
            # Default forwarded ip.
            set $forwarded '10.84.100.110';
            if ($http_x_proxy) {
               set $varnish  $http_x_proxy;
            }
            if ($http_x_forwarded_for) {
               set $forwarded $http_x_forwarded_for;
            }
            if ($http_x_host) {
               set $varhost $http_x_host;
            }
            if ($http_x_host = '') {
               set $varhost $host;
            }
            proxy_pass $varnish$request_uri;
            proxy_set_header X-Forwarded-For $forwarded;
            proxy_set_header X-VG-Client-IP $proxy_add_x_forwarded_for;
            proxy_set_header X-SCH-Client-IP $proxy_add_x_forwarded_for;
            proxy_set_header Host $varhost;
            proxy_set_header X-Forward-Host $varhost;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-URL-Scheme $scheme;
            proxy_set_header X-Proto $scheme;
        }
        
        ssl_certificate  /etc/ssl-managed/self-signed.crt;
        ssl_certificate_key  /etc/ssl-managed/self-signed.key;
        ssl_dhparam /etc/ssl-managed/dhparam.pem;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        client_max_body_size 256M;
}

