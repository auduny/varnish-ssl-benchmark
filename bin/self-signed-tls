#!/bin/bash

if [ ! -d "etc/" ]; then
   echo "Missing folder etc/"
   echo "Usage: bin/self-signed-tls"
   exit
fi

DIR=""
CADIR=""
# Process Arguments
while [ "$1" != "" ]; do
   PARAM=$(echo $1 | awk -F= '{print $1}')
   VALUE=$(echo $1 | awk -F= '{print $2}')
   case $PARAM in
   -p) DIR=$VALUE ;;
   -ca) CADIR=$VALUE ;;
   esac
   shift
done

if [ "$CADIR" == "" ] && [ -e "$HOME/.ssl/" ] && [ -e "$HOME/.ssl/ca.key" ]; then
   echo "$HOME/.ssl/ca.key finnes!!"
   CADIR="$HOME/.ssl/"
fi

if [ "$DIR" == "" ]; then
   OUTPATH=$(pwd)/etc/ssl-managed/
else
   OUTPATH=${DIR}/etc/ssl-managed/
fi

if [ ! -e "${OUTPATH}" ]; then
   echo "Created: ${OUTPATH}"
   mkdir -p ${OUTPATH}
fi

if [ "$CADIR" == "" ]; then
   CADIR=$OUTPATH
fi

# Directories
scriptName=$(basename $0)

# Certificate Variables
VERBOSE=0
FILE=""
DURATION=3650 # 10 years

emailAddress='noreply@snuskepus.com'
L='na'
CN='self-signed'
CAKEY="ca.key"
CAFILE="ca.pem"
OU='ou'
O='Media'
ST='Oslo'
C='Norway'
FILE='self-signed'
DNS='dns.ext'

buildCsrCnf() {
   cat <<EOF >${OUTPATH}${FILE}.cnf
[req]
default_bits = 2048
prompt = no
default_md = sha256
distinguished_name = dn

[dn]
C=NO
ST=Oslo
L=na
O=Schibsted
OU=na
CN=vg.no
emailAddress=noreply@snuskepus.com
EOF
}

# Generating a dhparam.pem if missing
writeDhParam() {
   cat <<EOF >${OUTPATH}dhparam.pem
-----BEGIN DH PARAMETERS-----
MIIBCAKCAQEAy5m21Zmz0x+tTuIX3Wv8Vy8eJsVtXmWnWxFzefJ3d7qR3lVt6Jw2
sKiFHMLck8HXwMK8BN99yOW91hBtQq0bmVSG6jP1aNetLZQM5PQ88eeokgfdGXBr
osjnDUR78hB5U99Bg73vTinDaxynbjISEhzPH5L0KljSvksFESS1XmXCdUibJ9F0
0ZpBY6DuOt9fHWVigq1Rl64GoKF94Xt2CMFqtZMvmGMOEXLxs1FYvp0IH5uh6mlH
VvP7iarGjbK7m3cJJfjnQ1p7VyIsPU+E3kONi9tgGg+Gs5cIfba+25RqQQsRsaRq
SOf+e8c20J2uTjzyo5tk4ijOJA/rAAUc6wIBAg==
-----END DH PARAMETERS-----
EOF
}

# Generating an initial dns.ext if missing
writeDnsExt() {
   cat <<EOF >${OUTPATH}dns.ext
authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names

[alt_names]
DNS.1 = *.vg.no
DNS.2 = vg.no
DNS.3 = *.aftenposten.no
DNS.4 = aftenposten.no
DNS.5 = *.bt.no
DNS.6 = bt.no
DNS.7 = *.fvn.no
DNS.8 = fvn.no
DNS.9 = *.aftenbladet.no
DNS.10 = aftenbladet.no
EOF
}

# Build TLS Certificate
build() {
   # Santizie domain name for file name
   FILENAME=${CN/\*\./}

   if [ ! -e "${OUTPATH}dhparam.pem" ]; then
      writeDhParam
   fi

   if [ ! -e "${OUTPATH}dns.ext" ]; then
      writeDnsExt
   fi

   created_priv_key=0
   # Generate CA key & crt
   if [ ! -e "${CADIR}${CAKEY}" ] || [ ! -e "${CADIR}${CAFILE}" ]; then
      # Create the _CA.key
      openssl genrsa -out ${OUTPATH}${CAKEY} 2048
      # Create the _CA.pem
      openssl req -x509 -new -nodes -key ${OUTPATH}${CAKEY} -sha256 -days ${DURATION} -out ${OUTPATH}${CAFILE} -subj "/C=NO/ST=na/L=na/O=Schibsted/OU=na/CN=self-signed/emailAddress=na@schibsted.com"
      created_priv_key=1
   else
      echo "Key: ${CADIR}${CAKEY} og ${CADIR}${CAFILE} finnes!!"
   fi

   if [ ! -e "${CADIR}${CAKEY}" ] || [ ! -e "${CADIR}${CAFILE}" ]; then
      echo "Missing ${CADIR}${CAFILE}"
      exit
   fi

   if [ ! -e ${OUTPATH}${FILE}.csr ]; then
      # CSR Configuration
      buildCsrCnf
      # Server key
      openssl req -new -sha256 -nodes -out ${OUTPATH}${FILE}.csr -newkey rsa:2048 -keyout ${OUTPATH}${FILENAME}.key -config <(cat ${OUTPATH}${FILE}.cnf)
   fi

   openssl x509 -req -in ${OUTPATH}${FILE}.csr -CA ${CADIR}${CAFILE} -CAkey ${CADIR}${CAKEY} -CAcreateserial -out ${OUTPATH}${FILENAME}.crt -days ${DURATION} -sha256 -extfile ${OUTPATH}${DNS}
   cat ${OUTPATH}${FILENAME}.crt ${OUTPATH}${FILENAME}.key >>${OUTPATH}${FILENAME}.pem
   if [ $created_priv_key == 1 ]; then
      # Copy files to
      if [ ! -d "$HOME/.ssl" ]; then
         mkdir "$HOME/.ssl" && cp ${OUTPATH}ca.* "$HOME/.ssl"
      else
         cp ${OUTPATH}ca.* "$HOME/.ssl"
      fi
   fi
}

build
